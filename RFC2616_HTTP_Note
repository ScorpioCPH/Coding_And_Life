This is a learning note about RFC2616, which difined the HTTP/1.1

1.Some Terminology:
  Connection: 连接，传输层的虚拟回路，由想要进行通信的两个程序创建；
  Message: 消息， HTTP的基本通信单元，由结构化的字节序列组成，它满足特定的语法，并且通过连接进行传输；
  Request: 请求，或称请求消息；
  Response: 响应，或称响应消息;
  Resource: 资源，通过URI定义的，网络数据对象或者服务，它可以有多种的表现形式（多语言，数据格式，大小，分辨率）；
  Entity: 实体，作为被传递的信息，是请求或是响应的有效载荷，它由两部分组成：存在于实体标题区的“元信息”,以及存在于实体主体区的内容；
  Representation: 表现形式，一个响应包含的实体是由内容协商决定的，有可能存在一个特定的响应状态对应多个表现形式；
  Content Negotiation: 内容协商，一种根据请求来选择表现的机制。每一个响应中的实体表现都可以被协商，包括错误响应。
  Variant: 变体，在任何时刻，一个资源都有可能存在一个或是多个连接到它上面的表现。每一个这种表现，都是一个“变体”，使用变体这个概念，并不一定意味着，资源就是内容协商的主题。
  Client: 客户端，一个程序，通过建立连接来完成发送请求的目的。
  User Agent: 用户代理，发起请求的客户端。通常是浏览器，编辑器，网络爬虫，或是终端用户工具。
  Server: 服务器，一个应用程序，可以接受客户端的连接请求，并通过向客户端发送响应来处理请求。任何程序，都有可能成为客户端或者服务器，我们用这些概念来表明特定连接中，应用程序所扮演的角色，而不是应用程序通常的功能。同样的，根据不同请求的性质，任何服务器都可以通过切换它们的行为，来作为源服务器，代理服务器，网关，或是管道等角色。
  Origin Server: 源服务器，存储或创建资源的服务器。
  Proxy: 代理，一个中间程序，既充当服务器，也作为客户端，为了代表其他客户端提出请求。请求被内部处理，或者被传递（有可能被翻译）给其他服务器。一个代理必须完成服务器和客户端的功能需求。透明代理“transparent proxy”需要代理认证和代理识别，它不会修改请求或响应。非透明代理“nontransparent proxy”需修改请求或响应，以便为用户代理“user agent”提供附加服务，例如组注释服务，媒体类型转换，协议简化，或者匿名过滤等。除非透明行为或非透明行为经被显式地声明，否则，HTTP代理既是透明代理也是非透明代理。
  Gateway: 网关，其实是一个中间服务器，介于其它服务器和客户端之间。与代理不同，网关接收请求，仿佛它就是请求资源的源服务器。发出请求的客户端可能觉察不到它正在同网关通信。
  Tunnel: 管道，管道也是一个中间程序，它在两个连接之间充当盲目中继“blind relay”。一旦管道处于活动状态，它不能被认为是这次HTTP通信的参与者，虽然HTTP请求可能已经把它初始化了。当中继连接的两端都关闭的时候，管道不再存在。
  Cache: 缓存，缓存是响应消息的本地存储，也是一个子系统，用来控制消息的保存，检索和删除。缓存保存了可缓存的响应“cacheable response”，来减少将来相同请求的响应时间和网络带宽消耗。任何客户端和服务器都可以有缓存，但缓存不能被充当管道的服务器使用。
  Cacheable: 可缓存的，如果一个响应消息允许缓存程序保存它的副本，用来响应接下来的响应序列，那么可以说这个响应消息是可缓存的。如何确定响应消息的可缓存能力在第13章有描述。尽管某个资源是可缓存的，但针对特殊的请求，仍然有可能约束缓存来保存这个副本。
  First-Hand: 第一手，如果一个响应消息直接从源服务器获得（可能经过若干代理服务器），没有不必要的延时，那么可以说这个响应消息是第一手的。如果一个响应消息的有效性直接被源服务器确认，那么也可以说它是第一手的。
  Explicit Expiration Time: 显示过期时间，当这一时间到达后，如果缓存没有对缓存的副本进行重新验证，那么不允许使用此副本区响应后续的请求。
  Heuristic Expiration Time: 启发式过期时间，当没有可用的显示过期时间时，由缓存指定的过期时间。
  Age: 年龄，一个响应消息的年龄，是指从它被源服务器发出，或是被源服务器验证成功地时刻，到现在的时间间隔。
  Freshness Lifetime: 保鲜期，一个响应消息的产生到过期之间的时间间隔。
  Fresh: 新鲜的，如果一个响应消息的年龄没有超过它的保鲜期，那么可以说这个响应消息是新鲜的。
  Stale: 陈旧的，如果一个响应消息的年龄超过了它的保鲜期，那么可以说这个响应消息是陈旧的。
  Semantically Transparent: 语义透明，缓存“cache”可能会以一种语意透明"semantically transparent"的方式工作。这时，对于一个特定的响应，使用缓存既不会对请求客户端产生影响，也不会对源服务器产生影响，缓存的使用只是为了提高性能。当缓存“cache”具有语意透明时，客户端从缓存接收的响应跟直接从源服务器接收的响应完全一致（除了使用hop-by-hop头域）。
  Validator: 验证器，验证期是一个协议元素（例如实体标签"entity tag"，或是最终修改时间），用来识别一个缓存里的副本，是否是一个源服务器的实体的等价拷贝。
  Upstream/Downstream: 上游/下游，描述了一个消息的流动：所有的消息都是从上游流向下游。
  Inbound/Outbound: 入站/出站，指明了消息的请求/响应路径，“入站”意味着“流向源服务器”，“出站”意味着“流向客户端user agent”。

2.Overall Operation
  HTTP是一个响应/请求的协议。客户端给服务器发送请求的格式是一个请求方法
（request method），URI，协议版本号，然后紧接着一个包含请求修饰符（modifiers），客户端信息，和可能的消息主体的类MIME（MIME-like）消息。服务器对请求端发送响应的格式，是以一个状态行（status line），其后跟随一个包含服务器信息、实体元信息和可能的实体主体内容的类MIME（MIME-like）的消息。其中状态行（status line）包含消息的协议版本号和一个成功或错误码。

  

